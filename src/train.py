import pathlib
import re
import pandas as pd
from sklearn.tree import DecisionTreeClassifier
import pickle

class PreprossesData():
    '''Preprocess dataframe and extract new features'''

    def __init__(self):
        pass

    def extract_features(self, df):
        '''Create new corpus with features such as different
        extentions counts and number of digits, letters and other_chars
        in lib names'''

        new_corpus = pd.DataFrame()

        libs = df['libs'].apply(lambda x: x.split(','))

        new_corpus['libs'] = libs
        new_corpus['dll_count'] = libs.apply(lambda x: sum(pathlib.Path(l).suffix.lower() == '.dll' for l in x))
        new_corpus['drv_count'] = libs.apply(lambda x: sum(pathlib.Path(l).suffix.lower() == '.drv' for l in x))
        new_corpus['exe_count'] = libs.apply(lambda x: sum(pathlib.Path(l).suffix.lower() == '.exe' for l in x))
        new_corpus['cpl_count'] = libs.apply(lambda x: sum(pathlib.Path(l).suffix.lower() == '.cpl' for l in x))
        # delete sys_count feature because it has no impact according to clf.feature_importances_
        # new_corpus['sys_count'] = libs.apply(lambda x: sum(pathlib.Path(l).suffix.lower() == '.sys' for l in x))

        new_corpus['libname_numbers_count'] = libs.apply(lambda x: sum(len(re.findall('[0-9]', l)) for l in x) / len(x))
        new_corpus['libname_letters_count'] = libs.apply(lambda x: sum(len(re.findall('[A-z]', l)) for l in x) / len(x))
        new_corpus['libname_other_chars_count'] = libs.apply(lambda x: sum(len(re.findall(r'[^a-zA-Z0-9.]', l)) for l in x) / len(x))

        return new_corpus

if __name__ == '__main__':
    train_df = pd.read_csv("../data/train.tsv", sep='\t')
    X = train_df.drop(['is_virus'], axis=1)
    y = train_df.is_virus

    prep = PreprossesData()

    X = prep.extract_features(X).iloc[:, 1:]

    clf = DecisionTreeClassifier(random_state=0)
    clf.fit(X, y)

    with open('../data/clf_model.pkl', 'wb') as f:
        pickle.dump(clf,f)
        f.close()
